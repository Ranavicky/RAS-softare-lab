{"version":3,"sources":["logo.png","components/Main.js","components/AdminPage.js","components/Navbar.js","components/CustomerHome.js","components/AdminHome.js","components/AdminNavbar.js","components/GetUsers.js","components/GenerateReport.js","components/ViewOrders.js","components/ManageItems.js","components/AddMenuItems.js","components/EditMenuItem.js","components/CustomerLogin.js","components/CustomerRegister.js","components/SendFeedback.js","components/CustomerOrders.js","components/Payment.js","components/CustomerCart.js","components/OrderSuccess.js","components/GetFeedbacks.js","components/Page404.js","components/StaffLogin.js","components/Chef.js","components/Waiter.js","components/PrintBill.js","components/AdminInvoices.js","components/AdminGenBill.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","img","alt","userType","Main","LOGO","to","AdminPage","useState","username","password","user","setUser","err","setErr","navigate","useNavigate","onChangeInput","e","target","name","value","adminLoginSubmit","a","preventDefault","axios","post","res","data","isAdmin","localStorage","setItem","accessToken","console","log","response","onSubmit","method","type","id","placeholder","required","onChange","autoComplete","toast","configure","Navbar","token","getItem","jwt_decode","style","textDecoration","color","onClick","clear","warning","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","Home","isAuth","setCart","cartUpdated","setCartUpdated","items","setItems","notify","msg","success","getItems","get","addToCart","item","headers","getCart","cartBody","userId","itemId","_id","title","quantity","price","newCart","i","length","put","updatedCart","itemObject","push","useEffect","map","desc","AdminCard","actionName","AdminHome","removeItem","AdminNavbar","padding","marginBottom","fontSize","fontWeight","borderRadius","cursor","GetUsers","totalUsers","setTotalUsers","usersByMonth","setUsersByMonth","users","setUsers","monthNames","getUsers","getUsersByMonth","key","isStaff","state","staffType","createdAt","total","GenerateReport","prevMonth","orders","setOrders","sales","totalOrder","setTotalOrder","currentIncome","setCurrentIncome","prevIncome","setPrevIncome","currentMonth","Date","getMonth","getOrders","getSales","sum","order","amount","totalIncome","parseFloat","toFixed","ViewOrders","status","ManageItems","deleteItem","delete","window","location","href","AddMenuItems","addItem","newItem","alert","htmlFor","EditItem","match","paramId","useParams","editItem","CustomerLogin","error","loginSubmit","CustomerRegister","email","registerSubmit","SendFeedback","message","rating","feedbackBody","setFeedbackBody","feedbackSubmit","width","height","min","max","CustomerOrders","decoded","orderItem","Payment","deleteCart","generateOrder","orderBody","cartId","border","marginRight","backgroundColor","description","panelLabel","stripeKey","process","image","CustomerCart","genPayment","setGenPayment","totalAmount","setTotalAmount","cart","amt","handlePlusClick","assign","handleMinusClick","splice","cartItem","OrderSuccess","orderSummary","setOrderSummary","orderId","getOrderSummary","GetFeedbacks","feedbacks","setFeedbacks","totalFeedbacks","setTotalFeedbacks","averageRating","setAverageRating","getFeedbacks","avg","feedback","Page404","display","flexDirection","alignItems","paddingTop","StaffLogin","Chef","markAsPrepared","setTimeout","reload","Waiter","markAsCompleted","generateBill","PrintBill","billId","setOrder","getOrderDetails","AdminInvoices","generateInvoice","margin","AdminGenBill","App","path","element","CustomerHome","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","document","getElementById"],"mappings":"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","file":"static/js/main.7cac4846.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.dca1b69a.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport LOGO from '../logo.png';\r\n\r\nconst Card = (props) => {\r\n    return (\r\n        <div className='main-card'>\r\n            <img className='main-card-img' src={props.img} alt='user-avatar' />\r\n            <h3>{props.userType}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst Main = () => {\r\n    return (\r\n        <div className='main'>\r\n            <img src={LOGO} className='ras-logo' />\r\n            <h1>Restaurant Automation System (RAS)</h1>\r\n            <br />\r\n            <h3>(Select User Type)</h3>\r\n            <div className='main-card-container'>\r\n                <Link to=\"/customer/login\"><Card userType=\"Customer\" img=\"https://www.clipartmax.com/png/full/86-865575_dinner-eating-food-lunch-meal-people-restaurant-eating-dinner-icon-png.png\" /></Link>\r\n                <Link to=\"/staff/login\"><Card userType=\"Staff\" img=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRjAY8pdueayjQaeRs-d5oAGkNZGD9YtaFNyg&usqp=CAU\" /></Link>\r\n                <Link to=\"/admin\"><Card userType=\"Admin\" img=\"https://cdn-icons-png.flaticon.com/512/2206/2206368.png\" /></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nconst AdminPage = () => {\r\n\r\n    const [user, setUser] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const [err, setErr] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onChangeInput = e => {\r\n        const { name, value } = e.target;\r\n        setUser({...user, [name]:value});\r\n        setErr('');\r\n    }\r\n\r\n    const adminLoginSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('https://ras-api-server.herokuapp.com/api/auth/login',{\r\n                username: user.username,\r\n                password: user.password\r\n            });\r\n            if(!res.data.isAdmin) {\r\n                setErr(\"Only The Admin is Allowed To Access\");\r\n                return;\r\n            }\r\n            setUser({username: '', password: ''});\r\n            localStorage.setItem('tokenStore', res.data.accessToken);\r\n            return navigate('/admin/home');\r\n        } catch (err) {\r\n            console.log(err);\r\n            setErr(err.response.data);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='admin-login-page-container'>\r\n            <h1>Admin Login</h1>\r\n            <h3>Enter The Required Credentials</h3>\r\n\r\n            <br /><br />\r\n\r\n            <form onSubmit={adminLoginSubmit} method=\"post\" className = \"log-form\">\r\n                <div className=\"group log-input\">\r\n                    <input type=\"text\" id = \"username\" name = \"username\" placeholder = \"Username\" required value={user.username} onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"group log-input\">\r\n                    <input type=\"password\" id = \"password\" name = \"password\"  placeholder = \"Password\" required value={user.password} autoComplete=\"true\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                {\r\n                    err ? <><p className='log-form-err'>{err}</p><br /></> : <br />\r\n                }\r\n                \r\n                <div className=\"container-log-btn\">\r\n                    <button type=\"submit\" name = \"btn_submit\" className=\"log-form-btn\">\r\n                    <span>Login as Admin</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminPage;","import React from 'react';\r\nimport '../App.css';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { Link } from 'react-router-dom';\r\nimport {toast} from 'react-toastify';\r\nimport LOGO from '../logo.png';\r\n\r\ntoast.configure();\r\n\r\nfunction Navbar() {\r\n\r\n    const notify = () => {\r\n        toast.warning('Logout Successful', {\r\n            position: 'top-right', autoClose: 3550, hideProgressBar: true, closeOnClick: false, \r\n            pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n        });\r\n    }\r\n\r\n    const logoutSubmit = () => {\r\n        localStorage.clear();\r\n        notify();\r\n    }\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n    else\r\n        isAuth = false;\r\n\r\n    if(isAuth == true)\r\n    {\r\n        var decoded = jwt_decode(token);\r\n        var username = decoded.name;\r\n    }\r\n\r\n    return (\r\n        <section className=\"navbar\">\r\n            <div className=\"logo\">    \r\n                <Link to=\"/customer/home\" style={{ textDecoration: 'none', color: 'black' }}><img src={LOGO} className=\"ras-brand\" /></Link>\r\n            </div>\r\n            <ul className=\"nav-list\">         \r\n                <>\r\n                    <li className=\"current-user-info\">Welcome, <strong>{username}</strong></li>\r\n                    <li><Link to=\"/customer/home\" className=\"nav-link\" style={{ textDecoration: 'none', color: 'black' }}>Home</Link></li>\r\n                    <li><Link to=\"/customer/cart\" className=\"nav-link\" style={{ textDecoration: 'none', color: 'black' }}>Cart</Link></li>\r\n                    <li><Link to=\"/customer/orders\" className=\"nav-link\" style={{ textDecoration: 'none', color: 'black' }}>Your Orders</Link></li>\r\n                    <li className=\"nav-link\" onClick={logoutSubmit}><Link to=\"/\" style={{ textDecoration: 'none', color: 'black' }}>Logout</Link></li>\r\n                </>         \r\n            </ul>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"../App.css\";\r\nimport Navbar from './Navbar';\r\nimport {toast} from 'react-toastify';\r\n\r\ntoast.configure();\r\n\r\nconst Home = () => {\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token) {\r\n        isAuth = true;\r\n    }\r\n\r\n    if(isAuth == true) {\r\n        var decoded = jwt_decode(token);\r\n        var id = decoded.id;\r\n    }\r\n\r\n    const [cart, setCart] = useState({});\r\n    const [cartUpdated, setCartUpdated] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n    \r\n    const notify = (msg) => {\r\n        toast.success(msg, {\r\n            position: 'top-right', autoClose: 2500, hideProgressBar: true, closeOnClick: false, \r\n            pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n        });\r\n    }\r\n\r\n    const getItems = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/items');\r\n        setItems(res.data);\r\n    }\r\n\r\n    const addToCart = async (item) => {\r\n        const getCart = await axios.get(`https://ras-api-server.herokuapp.com/api/carts/find/${id}`,\r\n            {headers: {token: token}},\r\n            );\r\n        setCart(getCart.data);\r\n        // if cart is initially empty, create a new cart\r\n        if(!getCart.data) {\r\n            const cartBody = {\r\n                userId: id,\r\n                items: [\r\n                    {\r\n                        itemId: item._id,\r\n                        title: item.title,\r\n                        img: item.img,\r\n                        quantity: 1,\r\n                        price: item.price\r\n                    }\r\n                ]\r\n            }\r\n            const newCart = await axios.post('https://ras-api-server.herokuapp.com/api/carts/', cartBody, \r\n                {headers: {token: token}}\r\n                );\r\n            console.log('new cart created');\r\n            notify('Item Added To Cart');\r\n            return setCart(newCart.data);\r\n        }\r\n        // if cart exists, check for the item in the cart\r\n        if(getCart.data) \r\n        {\r\n            setCart(getCart.data)\r\n            for(let i=0; i<getCart.data.items.length; i++) {\r\n                // if item found, increase the quantity by 1\r\n                if(item._id === getCart.data.items[i].itemId) {\r\n                    getCart.data.items[i].quantity += 1;\r\n                    const updatedCart = await axios.put(`https://ras-api-server.herokuapp.com/api/carts/${getCart.data._id}`, getCart.data, \r\n                    {headers: {token: token}},\r\n                    )\r\n                    console.log('cart updated');\r\n                    setCart(updatedCart.data)\r\n                    notify('Item Quantity Updated');\r\n                    return setCartUpdated(true)\r\n                }\r\n            }\r\n            // if item not found, add it to the cart\r\n            if(!cartUpdated)\r\n            {\r\n                const itemObject = {\r\n                        itemId: item._id,\r\n                        title: item.title,\r\n                        img: item.img,\r\n                        quantity: 1,\r\n                        price: item.price\r\n                }\r\n                getCart.data.items.push(itemObject);\r\n                const updatedCart = await axios.put(`https://ras-api-server.herokuapp.com/api/carts/${getCart.data._id}`, getCart.data, \r\n                    {headers: {token: token}},\r\n                    )\r\n                console.log('cart updated');\r\n                setCart(updatedCart.data)\r\n                notify('Item Added To Cart');\r\n                return setCartUpdated(true)\r\n            }    \r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n    }, []);\r\n\r\n    return(\r\n        <>\r\n            <Navbar />\r\n            <div className='customer-home-container'>\r\n                <h2>Here's What We Have For You 👇🏻</h2><br />\r\n                \r\n                <div className='c-menu-items-container'>\r\n                    {\r\n                        items.map( (item) => {\r\n                            return (\r\n                                <div className='item-card'>\r\n                                    <img className='item-card-img' src={item.img} alt=\"food-avatar\" />\r\n                                    <h3>{item.title}</h3>\r\n                                    <h4>{item.desc}</h4>\r\n                                    <br />\r\n                                    <h4>INR <strong>{item.price}</strong></h4><br />\r\n                                    <div className='item-btn-container'>\r\n                                        <a onClick={() => addToCart(item)} className='item-btn-add-cart'>ADD TO CART</a>\r\n                                    </div>\r\n                                </div>\r\n                            );\r\n                        })\r\n                    }\r\n                </div>\r\n                <br />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"../App.css\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst AdminCard = (props) => {\r\n    return (\r\n        <div className='admin-card'>\r\n            <img className='admin-card-img' src={props.img} alt='card-action' />\r\n            <h3>{props.actionName}</h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst AdminHome = () => {\r\n    \r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const logoutSubmit = () => {\r\n        localStorage.removeItem('tokenStore');\r\n    }\r\n\r\n    return(\r\n        <div className='admin-main'>\r\n            <br /><br/>\r\n            <h1>ADMIN DASHBOARD</h1>\r\n\r\n            <br /><br/>\r\n\r\n            <div className='admin-cards-container'>\r\n                <Link to=\"/admin/users\"><AdminCard img=\"https://icons-for-free.com/iconfiles/png/512/users+icon-1320186917379515742.png\" actionName=\"User Analytics\" /></Link>\r\n                <Link to=\"/admin/items\"><AdminCard img=\"https://www.nicepng.com/png/detail/263-2632565_open-healthy-food-icon-png.png\" actionName=\"Manage Items\" /></Link>\r\n                <Link to=\"/admin/orders\"><AdminCard img=\"https://cdn-icons-png.flaticon.com/128/3496/3496155.png\" actionName=\"View Orders\" /></Link>\r\n                <Link to=\"/admin/invoices\"><AdminCard img=\"https://png.pngtree.com/png-vector/20191011/ourlarge/pngtree-invoice-icon-png-image_1817550.jpg\" actionName=\"Invoices\" /></Link>\r\n                <Link to=\"/admin/report\"><AdminCard img=\"https://static.thenounproject.com/png/48895-200.png\" actionName=\"Generate Report\" /></Link>\r\n                <Link to=\"/admin/feedbacks\"><AdminCard img=\"https://static.vecteezy.com/system/resources/thumbnails/002/238/477/small/feedback-icon-free-vector.jpg\" actionName=\"View Feedbacks\" /></Link>\r\n            </div>\r\n\r\n            <br /><br />\r\n\r\n            <button className=\"admin-logout-btn\" onClick={logoutSubmit}><Link to=\"/\">CLICK TO LOGOUT</Link></button>\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default AdminHome;","import React from 'react';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction AdminNavbar() {\r\n\r\n    return (\r\n            <Link to=\"/admin/home\"><button style={{padding: \"10px 25px\", marginBottom: \"20px\", fontSize: \"1.25rem\", fontWeight: \"bold\", borderRadius: \"25px\", cursor: \"pointer\"}}>BACK TO DASHBOARD</button></Link>\r\n    )\r\n}\r\n\r\nexport default AdminNavbar;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"../App.css\";\r\nimport AdminNavbar from './AdminNavbar';\r\n\r\nconst GetUsers = () => {\r\n\r\n    const [totalUsers, setTotalUsers] = useState(0);\r\n    const [usersByMonth, setUsersByMonth] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const getUsers = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/users?new=true',\r\n            {headers: {token: token}}, \r\n            );\r\n        setUsers(res.data);\r\n        setTotalUsers(res.data.length);\r\n    }\r\n\r\n    const getUsersByMonth = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/users/stats',\r\n            {headers: {token: token}}, \r\n            );\r\n        setUsersByMonth(res.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n        getUsersByMonth();\r\n    }, []);\r\n\r\n    return (\r\n            <div className='reports-page'>\r\n                <AdminNavbar /><br />\r\n                <h1>User Analytics</h1><hr />\r\n                <br />\r\n                <h3>Total Number of Users Registered in the System: {totalUsers}</h3>\r\n\r\n                <br /><br />\r\n\r\n                <h3>List of Users</h3>\r\n                <table className='list-of-users'>\r\n                    <tr>\r\n                        <th className='user-table-heading'>S. No.</th>\r\n                        <th className='user-table-heading'>Username</th>\r\n                        <th className='user-table-heading'>User Type</th>\r\n                        <th className='user-table-heading'>Registered On</th>\r\n                    </tr>\r\n                    {\r\n                    users.map((user, key) => {\r\n                        return (\r\n                            <tr>\r\n                                <td className='user-table-values'>{key+1}</td>\r\n                                <td className='user-table-values'>{user.username}</td>\r\n                                {\r\n                                    user.isAdmin\r\n                                        ?\r\n                                            <td className='user-table-values'>ADMIN</td>\r\n                                        :\r\n                                            user.isStaff.state\r\n                                                ?\r\n                                                    user.isStaff.staffType === \"chef\"\r\n                                                        ?\r\n                                                            <td className='user-table-values'>STAFF / CHEF</td>\r\n                                                        :\r\n                                                            <td className='user-table-values'>STAFF / WAITER</td>\r\n                                                : \r\n                                                    <td className='user-table-values'>CUSTOMER</td>\r\n                                }\r\n                                <td className='user-table-values'>{user.createdAt}</td>\r\n                            </tr>\r\n                        )\r\n                        \r\n                    })}\r\n                </table>\r\n\r\n                <br /><br />\r\n                <h3>Monthly Data</h3>\r\n                <h4>Number of Users Registered On The Month of - </h4>\r\n                {\r\n                    usersByMonth.map(user => {\r\n                        return (\r\n                            <p>{monthNames[user._id - 1]}: {user.total}</p>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default GetUsers;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport AdminNavbar from './AdminNavbar';\r\n\r\nconst GenerateReport = () => {\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [sales, setSales] = useState([]);\r\n    const [totalOrder, setTotalOrder] = useState(0);\r\n    const [currentIncome, setCurrentIncome] = useState(0);\r\n    const [prevIncome, setPrevIncome] = useState(0);\r\n\r\n    const date = new Date();\r\n    var currentMonth = date.getMonth()+1;\r\n    var prevMonth;\r\n    if(currentMonth === 1)\r\n        prevMonth = 12;\r\n    else\r\n        prevMonth = currentMonth - 1;\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const getOrders = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/orders/',\r\n            {headers: {token: token}}, \r\n            );\r\n        setOrders(res.data);\r\n        setTotalOrder(res.data.length);\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        var sum = 0;\r\n        orders.map(order => {\r\n            sum = sum + order.amount;\r\n        });\r\n        return sum;\r\n    }\r\n\r\n    const getSales = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/orders/income',\r\n            {headers: {token: token}}, \r\n            );\r\n        sales.push(res.data);\r\n        console.log(currentMonth, ' & ', prevMonth)\r\n        console.log(sales)\r\n        console.log(sales.length);\r\n        for(let i=0; i<sales[0].length; i++) {\r\n            if(sales[0][i]._id === currentMonth) {\r\n                setCurrentIncome((currentIncome) => currentIncome+sales[0][i].total);\r\n            }\r\n            if(sales[0][i]._id === prevMonth) {\r\n                setPrevIncome((prevIncome) => prevIncome+sales[0][i].total);\r\n            }\r\n        }\r\n        console.log(currentIncome, ' & ', prevIncome)       \r\n    }\r\n    \r\n    useEffect(() => {\r\n        getOrders();\r\n        getSales();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='reports-page'>\r\n            <AdminNavbar />\r\n            <h1>Sales Report</h1><hr /><br /><br />\r\n            <h3>Total Income Generated (Lifetime) : INR { totalIncome() }</h3><br />\r\n            <h3>Total Number of Orders : {totalOrder}</h3><br />\r\n            <h3>Income Generated in the Current Month = INR  { currentIncome }</h3><br />\r\n            <h3>Income Generated in the Last Month = INR { prevIncome }</h3><br />\r\n            {\r\n                parseFloat(((currentIncome-prevIncome)/prevIncome)*100).toFixed(2)>0 \r\n                    ?\r\n                        <p className='positive-sales'><strong>+ {parseFloat(((currentIncome-prevIncome)/prevIncome)*100).toFixed(2)} %&emsp;Sales Growth</strong></p> \r\n                    :\r\n                        <p className='negative-sales'><strong>{parseFloat(((currentIncome-prevIncome)/prevIncome)*100).toFixed(2)} %&emsp;Sales Decline</strong></p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GenerateReport;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport AdminNavbar from './AdminNavbar';\r\n\r\nconst ViewOrders = () => {\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalOrder, setTotalOrder] = useState(0);\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const getOrders = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/orders/',\r\n            {headers: {token: token}}, \r\n            );\r\n        setOrders(res.data);\r\n        setTotalOrder(res.data.length);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrders();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='reports-page'>\r\n            <AdminNavbar />\r\n            <h1>Orders</h1><hr /><br />\r\n            {\r\n                totalOrder>0\r\n                    ?\r\n                        <>\r\n                            <h3>Total Number of Orders (Lifetime): {totalOrder}</h3><br />\r\n                            <h3>List of Orders</h3><br />\r\n                            <table className='list-of-orders'>\r\n                                <tr>\r\n                                    <th className='order-table-heading'>S. No.</th>\r\n                                    <th className='order-table-heading'>Order Id</th>\r\n                                    <th className='order-table-heading'>Ordered By</th>\r\n                                    <th className='order-table-heading'>Date</th>\r\n                                    <th className='order-table-heading'>Amount</th>\r\n                                    <th className='order-table-heading'>Status</th>\r\n                                </tr>\r\n                                {\r\n                                orders.map((order, key) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td className='order-table-values'>{key+1}</td>\r\n                                            <td className='order-table-values'>{order._id}</td>\r\n                                            <td className='order-table-values'>{order.username}</td>\r\n                                            <td className='order-table-values'>{order.createdAt}</td>\r\n                                            <td className='order-table-values'>{order.amount}</td>\r\n                                            {\r\n                                                order.status === 'pending'\r\n                                                    ?\r\n                                                        <td className='order-table-values'><strong style={{color: \"red\"}}>{order.status}</strong></td>\r\n                                                    :\r\n                                                        order.status === 'completed'\r\n                                                            ?\r\n                                                                <td className='order-table-values'><strong style={{color: \"#04AA6D\"}}>{order.status}</strong></td>\r\n                                                            :\r\n                                                                <td className='order-table-values'><strong style={{color: \"#9B870C\"}}>{order.status}</strong></td>\r\n                                            }\r\n                                        </tr>\r\n                                    )\r\n                                    \r\n                                })}\r\n                            </table>\r\n                        </>\r\n                    :\r\n                        <h2>No Orders Found</h2>\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ViewOrders;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport \"../App.css\";\r\nimport { Link } from 'react-router-dom';\r\nimport AdminNavbar from './AdminNavbar';\r\n\r\nconst ManageItems = () => {\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const [items, setItems] = useState([]);\r\n\r\n    const getItems = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/items');\r\n        setItems(res.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n    }, []);\r\n\r\n    const deleteItem = async (id) =>{\r\n        try {\r\n            if(token){\r\n                await axios.delete(`https://ras-api-server.herokuapp.com/api/items/${id}`, {\r\n                    headers: {token: token}\r\n                });\r\n                getItems();\r\n            }\r\n        } catch (error) {\r\n            window.location.href = \"/admin\";\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='manage-items-page'>\r\n            <AdminNavbar />\r\n            <h1>Menu Items</h1><br />\r\n            <Link to=\"/admin/items/add\" className='add-item-link'>Click Here to Add an Item</Link><br /><br />\r\n            <h3>Here are the available items</h3><br />\r\n            <div className='menu-items-container'>\r\n                {\r\n                    items.map( (item) => {\r\n                        return (\r\n                            <div className='item-card'>\r\n                                <img className='item-card-img' src={item.img} alt=\"food-avatar\" />\r\n                                <h3>{item.title}</h3>\r\n                                <h4>{item.desc}</h4>\r\n                                <br />\r\n                                <h4>INR <strong>{item.price}</strong></h4><br />\r\n                                <div className='item-btn-container'>\r\n                                    <Link to={`/admin/items/edit/${item._id}`} className='item-btn-edit'>EDIT</Link>\r\n                                    <a className='item-btn-dlt' onClick={() => deleteItem(item._id)}>DELETE</a>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })\r\n                }\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ManageItems;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AdminNavbar from './AdminNavbar';\r\n\r\nconst AddMenuItems = () => {\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const [item, setItem] = useState({\r\n        title: '',\r\n        desc: '',\r\n        img: '',\r\n        price: 0,\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onChangeInput = e => {\r\n        const {name, value} = e.target;\r\n        setItem({...item, [name]:value});\r\n    }\r\n\r\n    const addItem = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            const token = localStorage.getItem('tokenStore');\r\n            if(token){\r\n                const {title, desc, img, price} = item;\r\n                const newItem = {\r\n                    title, desc, img, price\r\n                }\r\n\r\n                await axios.post('https://ras-api-server.herokuapp.com/api/items', newItem, {\r\n                    headers: {token: token}\r\n                });\r\n                \r\n                return navigate('../admin/items');\r\n            }\r\n        } catch (err) {\r\n            console.log(err.response.data);\r\n            alert(err.response.data);\r\n            window.location.href = \"../admin/home\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='manage-items-page'>\r\n            <AdminNavbar />\r\n            <h1>Add Menu Item</h1><br/>\r\n\r\n            <form onSubmit={addItem}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"title\">Item Name</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Item Name\" required value={item.title} onChange={onChangeInput} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"author\">Short Description</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input type=\"text\" id=\"desc\" name=\"desc\" placeholder=\"Item Description Here ...\" required value={item.desc} onChange={onChangeInput} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"img\">Image URL</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input type=\"text\" id=\"img\" name=\"img\" placeholder=\"Link of a relatable image for your item\" required value={item.img} onChange={onChangeInput} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"content\">Price</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                    <input type=\"text\" id=\"price\" name=\"price\" placeholder=\"The Price of Your Dish\" required value={item.price} onChange={onChangeInput} />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                    <button className=\"item-post\" type=\"submit\">ADD</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddMenuItems;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport AdminNavbar from './AdminNavbar';\r\n\r\nfunction EditItem({match}) {\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const [item, setItem] = useState({\r\n        title: '',\r\n        desc: '',\r\n        img: '',\r\n        price: 0,\r\n        id: ''\r\n    });\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const paramId = useParams().id;\r\n\r\n    useEffect(() =>{\r\n        const getItem = async () =>{\r\n            if(paramId){\r\n                const res = await axios.get(`https://ras-api-server.herokuapp.com/api/items/find/${paramId}`)\r\n                setItem({\r\n                    title: res.data.title,\r\n                    desc: res.data.desc,\r\n                    img: res.data.img,\r\n                    price: res.data.price,\r\n                    id: res.data._id\r\n                });\r\n            }\r\n        }\r\n        getItem();\r\n    },[]);\r\n\r\n    const onChangeInput = e => {\r\n        const {name, value} = e.target;\r\n        setItem({...item, [name]:value});\r\n    }\r\n\r\n    const editItem = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const token = localStorage.getItem('tokenStore')\r\n            if(token){\r\n                const {title, desc, img, price, id} = item;\r\n                const newItem = {\r\n                    title, desc, img, price, id\r\n                }\r\n\r\n                await axios.put(`https://ras-api-server.herokuapp.com/api/items/${item.id}`, newItem, {\r\n                    headers: {token: token}\r\n                });\r\n                \r\n                return navigate('/admin/items');\r\n            }\r\n        } catch (err) {\r\n            alert(err);\r\n            window.location.href = \"/admin/home\";\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='manage-items-page'>\r\n            <AdminNavbar />\r\n            <h1>Editing The Details of '{item.title}'</h1><br />\r\n\r\n            <form onSubmit={editItem}>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"title\">Item Name</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input type=\"text\" id=\"title\" name=\"title\" placeholder=\"Item Name\" required value={item.title} onChange={onChangeInput} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"author\">Short Description</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input type=\"text\" id=\"desc\" name=\"desc\" placeholder=\"Item Description Here ...\" required value={item.desc} onChange={onChangeInput} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"img\">Image URL</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                        <input type=\"text\" id=\"img\" name=\"img\" placeholder=\"Link of a relatable image for your item\" required value={item.img} onChange={onChangeInput} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-25\">\r\n                        <label htmlFor=\"content\">Price</label>\r\n                    </div>\r\n                    <div className=\"col-75\">\r\n                    <input type=\"text\" id=\"price\" name=\"price\" placeholder=\"The Price of Your Dish\" required value={item.price} onChange={onChangeInput} />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"row\">\r\n                    <button className=\"item-post\" type=\"submit\">UPDATE</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EditItem;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\nimport {toast} from 'react-toastify';\r\n\r\ntoast.configure();\r\n\r\nconst CustomerLogin = () => {\r\n\r\n    const [user, setUser] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const [err, setErr] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onChangeInput = e => {\r\n        const { name, value } = e.target;\r\n        setUser({...user, [name]:value});\r\n        setErr('');\r\n    }\r\n\r\n    const notify = (msg) => {\r\n        if(msg === 'Login Successful') {\r\n            toast.success(msg, {\r\n                position: 'top-right', autoClose: 3550, hideProgressBar: true, closeOnClick: false, \r\n                pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n            });\r\n        }\r\n        else {\r\n            toast.error(msg, {\r\n                position: 'top-right', autoClose: 3550, hideProgressBar: true, closeOnClick: false, \r\n                pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n            });\r\n        }\r\n    }\r\n\r\n    const loginSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('https://ras-api-server.herokuapp.com/api/auth/login',{\r\n                username: user.username,\r\n                password: user.password\r\n            });\r\n            if(res.data.isAdmin) {\r\n                setErr(\"Admin Login Has a Separate Page\");\r\n                notify(\"Admin Login Has a Separate Page\")\r\n                return;\r\n            }\r\n            setUser({username: '', password: ''});\r\n            localStorage.setItem('tokenStore', res.data.accessToken);\r\n            notify('Login Successful');\r\n            return navigate('/customer/home');\r\n        } catch (err) {\r\n            console.log(err);\r\n            setErr(err.response.data);\r\n            notify(err.response.data);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='admin-login-page-container'>\r\n            <h1>Customer Login</h1><br />\r\n\r\n            <h3>Welcome Back!</h3>\r\n            <h4>Please enter your details to sign in to your account</h4>\r\n\r\n            <br /><br />\r\n\r\n            <form onSubmit={loginSubmit} method=\"post\" className = \"log-form\">\r\n                <div className=\"group log-input\">\r\n                    <input type=\"text\" id = \"username\" name = \"username\" placeholder = \"Username\" required value={user.username} onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"group log-input\">\r\n                    <input type=\"password\" id = \"password\" name = \"password\"  placeholder = \"Password\" required value={user.password} autoComplete=\"true\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                {\r\n                    // err ? <><p className='log-form-err'>{err}</p><br /></> : <br />\r\n                }\r\n                \r\n                <div className=\"container-log-btn\">\r\n                    <button type=\"submit\" name = \"btn_submit\" className=\"log-form-btn\">\r\n                    <span>Login</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <br />\r\n            <h3>New to RAS? <Link className='customer-auth-btn' to=\"/customer/register\">REGISTER HERE</Link></h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomerLogin;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\nimport {toast} from 'react-toastify';\r\n\r\ntoast.configure();\r\n\r\nconst CustomerRegister = () => {\r\n\r\n    const [user, setUser] = useState({\r\n        username: '',\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const [err, setErr] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onChangeInput = e => {\r\n        const { name, value } = e.target;\r\n        setUser({...user, [name]:value});\r\n        setErr('');\r\n    }\r\n\r\n    const notify = (msg) => {\r\n        if(msg === 'Registration Successful') {\r\n            toast.success(msg, {\r\n                position: 'top-right', autoClose: 3550, hideProgressBar: true, closeOnClick: false, \r\n                pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n            });\r\n        }\r\n        else {\r\n            toast.error(msg, {\r\n                position: 'top-right', autoClose: 3550, hideProgressBar: true, closeOnClick: false, \r\n                pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n            });\r\n        }\r\n    }\r\n\r\n    const registerSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('https://ras-api-server.herokuapp.com/api/auth/register',{\r\n                username: user.username,\r\n                email: user.email,\r\n                password: user.password\r\n            });\r\n            setUser({username: '', email: '', password: ''});\r\n            notify('Registration Successful');\r\n            return navigate('/customer/login');\r\n        } catch (err) {\r\n            console.log(err);\r\n            setErr(err.response.data);\r\n            notify(err.response.data);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='admin-login-page-container'>\r\n            <h1>Customer Registration</h1><br />\r\n\r\n            <h3>Welcome to RAS!</h3>\r\n            <h4>First things first. Lets create a new account and get started</h4>\r\n\r\n            <br /><br />\r\n\r\n            <form onSubmit={registerSubmit} method=\"post\" className = \"log-form\">\r\n                <div className=\"group log-input\">\r\n                    <input type=\"text\" id = \"username\" name = \"username\" placeholder = \"Username\" required value={user.username} onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"group log-input\">\r\n                    <input type=\"email\" id = \"email\" name = \"email\"  placeholder = \"E-Mail\" required value={user.email} onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"group log-input\">\r\n                    <input type=\"password\" id = \"password\" name = \"password\"  placeholder = \"Password\" required value={user.password} autoComplete=\"true\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                {\r\n                    // err ? <><p className='log-form-err'>{err}</p><br /></> : <br />\r\n                }\r\n                \r\n                <div className=\"container-log-btn\">\r\n                    <button type=\"submit\" name = \"btn_submit\" className=\"log-form-btn\">\r\n                    <span>REGISTER</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <br />\r\n            <h3>Already Have an Account? <br /><br /> <Link className='customer-auth-btn' to=\"/customer/login\">LOGIN HERE</Link></h3>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CustomerRegister;","import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport {toast} from 'react-toastify';\r\n\r\ntoast.configure()\r\n\r\nconst SendFeedback = (props) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [feedbackBody, setFeedbackBody] = useState({\r\n        userId: props.userId,\r\n        username: props.username,\r\n        message: '',\r\n        rating: ''\r\n    });\r\n\r\n    const onChangeInput = e => {\r\n        const { name, value } = e.target;\r\n        setFeedbackBody({...feedbackBody, [name]:value});\r\n    }\r\n\r\n    const notify = () => {\r\n        toast.success('Feedback Sent', {\r\n            position: 'bottom-right', autoClose: 5550, hideProgressBar: true, closeOnClick: false, \r\n            pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n        });\r\n    }\r\n\r\n    const feedbackSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('https://ras-api-server.herokuapp.com/api/feedbacks/new', feedbackBody, \r\n                {headers: {token: props.token}}\r\n                );\r\n            setFeedbackBody({message: '', rating: ''});\r\n            notify();\r\n            return navigate('../customer/orders')\r\n        } catch (err) {\r\n            console.log(err.response.data.message);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <br /><br /><hr /><br />\r\n                <h1>HOW WAS YOUR EXPERIENCE WITH US?</h1>\r\n                <h2>Help Us Know How We Can Improve!</h2><br />\r\n\r\n                <form onSubmit={feedbackSubmit} method=\"post\" className = \"feedback-form\">\r\n                    <div className=\"group log-input\">\r\n                        <textarea id=\"message\" name=\"message\" placeholder=\"Your Message ...\" style={{width: \"325px\", height: \"100px\" }} required value={feedbackBody.message} onChange={onChangeInput}></textarea>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div className=\"group log-input\">\r\n                        <input type=\"number\" id = \"rating\" name = \"rating\"  placeholder = \"Rate Us (Out of 5)\" min={1} max={5} required value={feedbackBody.rating} onChange={onChangeInput} />\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <div className=\"container-log-btn\">\r\n                        <button type=\"submit\" name = \"btn_submit\" className=\"log-form-btn\">\r\n                        <strong>SEND FEEDBACK</strong>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n            \r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default SendFeedback;","import React, { useState, useEffect } from 'react';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport Navbar from './Navbar';\r\nimport SendFeedback from './SendFeedback';\r\n\r\nconst CustomerOrders = () => {\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalOrder, setTotalOrder] = useState(0);\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    if(isAuth == true)\r\n    {\r\n        var decoded = jwt_decode(token);\r\n        var id = decoded.id;\r\n        var username = decoded.name;\r\n    }\r\n    \r\n\r\n    const getOrders = async () => {\r\n        const res = await axios.get(`https://ras-api-server.herokuapp.com/api/orders/userOrder/${id}`,\r\n            {headers: {token: token}}, \r\n            );\r\n        setOrders(res.data);\r\n        console.log(res.data)\r\n        if(res.data !== null) {\r\n            setTotalOrder(res.data.length);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrders();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className=\"customer-home-container\">\r\n                <h1>Your Orders</h1>\r\n                <br />\r\n                {\r\n                    totalOrder\r\n                        ?\r\n                            <>\r\n                                <table className='order-table'>\r\n                                    <tr>\r\n                                        <th className='order-table-heading'>S. No.</th>\r\n                                        <th className='order-table-heading'>Order Id</th>\r\n                                        <th className='order-table-heading'>Order Details</th>\r\n                                        <th className='order-table-heading'>Date</th>\r\n                                        <th className='order-table-heading'>Amount (INR)</th>\r\n                                        <th className='order-table-heading'>Status</th>\r\n                                    </tr>\r\n                                    {\r\n                                    orders.map((order, key) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td className='order-table-values'>{key+1}</td>\r\n                                                <td className='order-table-values'>{order._id}</td>\r\n                                                <td className='order-table-values'>\r\n                                                    {\r\n                                                        order.items.map(orderItem => {\r\n                                                            return (\r\n                                                                <p>{orderItem.quantity} {orderItem.title}</p>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='order-table-values'>{order.createdAt}</td>\r\n                                                <td className='order-table-values'>{order.amount}</td>\r\n                                                {\r\n                                                    order.status === 'pending'\r\n                                                        ?\r\n                                                            <td className='order-table-values'><strong className='pending-btn'>{order.status}</strong></td>\r\n                                                        :\r\n                                                            order.status === 'completed'\r\n                                                                ?\r\n                                                                    <td className='order-table-values'><strong className='completed-btn'>{order.status}</strong></td>\r\n                                                                :\r\n                                                                    <td className='order-table-values'><strong className='prepared-btn'>{order.status}</strong></td>\r\n                                                }\r\n                                            </tr>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                </table>\r\n                                <SendFeedback token={token} userId={id} username={username} />\r\n                            </>\r\n                        :\r\n                            <h2>No Orders Found</h2>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CustomerOrders;","import React from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport StripeCheckout from 'react-stripe-checkout';\r\nimport Navbar from \"./Navbar\";\r\nimport CustomerHome from './CustomerHome'\r\nimport axios from \"axios\";\r\nimport LOGO from '../logo.png';\r\nimport {toast} from 'react-toastify';\r\n\r\ntoast.configure();\r\n\r\nconst Payment = (props) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const notify = (msg) => {\r\n        toast.success(msg, {\r\n            position: 'top-right', autoClose: 6550, hideProgressBar: true, closeOnClick: false, \r\n            pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n        });\r\n    }\r\n\r\n    const deleteCart = async id => {\r\n        try {\r\n            if(props.token){\r\n                await axios.delete(`https://ras-api-server.herokuapp.com/api/carts/${id}`, {\r\n                    headers: {token: props.token}\r\n                });\r\n            }\r\n        } catch (error) {\r\n            window.location.href = \"/customer/home\";\r\n        }\r\n    }\r\n\r\n    const generateOrder = async () => {   \r\n        const orderBody = {\r\n            userId: props.userId,\r\n            username: props.username,\r\n            items: props.items,\r\n            amount: props.amount\r\n        }\r\n        const res = await axios.post('https://ras-api-server.herokuapp.com/api/orders/', orderBody, {headers: {token: props.token}});\r\n        localStorage.setItem('orderId', res.data._id);\r\n        deleteCart(props.cartId);\r\n        notify('Order Placed! 🥳')\r\n        navigate('../customer/orderSuccess')\r\n    }\r\n\r\n    const onToken = (token) => {\r\n        console.log(\"STRIPE TOKEN = \", token);\r\n        generateOrder();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                <h1>MAKE PAYMENT</h1><br />\r\n                <h2>(Select Payment Type)</h2><br />\r\n                <button \r\n                    onClick={generateOrder} \r\n                    style={{border: 'none', width: 120, borderRadius: 5, padding: \"20px\", marginRight: '20px', backgroundColor: \"black\", color: \"white\", cursor: 'pointer'}}>\r\n                        CASH\r\n                </button>\r\n                <StripeCheckout\r\n                    name=\"RAS\" description=\"Restaurant-Automation-System\" panelLabel=\"Pay Now\"\r\n                    token={onToken} stripeKey={process.env.REACT_APP_STRIPE_KEY} image={LOGO}\r\n                    >\r\n                    <button \r\n                        style={{border: 'none', width: 120, borderRadius: 5, padding: \"20px\", backgroundColor: \"black\", color: \"white\", cursor: 'pointer'}}>\r\n                            CARD\r\n                    </button>\r\n                    <br /><br />\r\n                </StripeCheckout>\r\n            </div>\r\n            \r\n           \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Payment;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport \"../App.css\";\r\nimport Navbar from './Navbar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Payment from './Payment';\r\n\r\nconst CustomerCart = () => {\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token) {\r\n        isAuth = true;\r\n        var decoded = jwt_decode(token);\r\n        var userId = decoded.id;\r\n        var username = decoded.name\r\n    }\r\n\r\n    const [genPayment, setGenPayment] = useState(false);\r\n    const PROCEED = 'Proceed To Checkout 👉🏻';\r\n    const BACK = 'Go Back';\r\n    const navigate = useNavigate();\r\n\r\n    const [totalAmount, setTotalAmount] = useState(50);\r\n\r\n    const [cart, setCart] = useState({});\r\n\r\n    const getCart = async () => {\r\n        const res = await axios.get(`https://ras-api-server.herokuapp.com/api/carts/find/${userId}`,\r\n            {headers: {token: token}}\r\n        );\r\n        setCart(res.data);\r\n        if(res.data) {\r\n            var amt = 0;\r\n            for(let i=0; i<res.data.items.length; i++) {\r\n                amt += res.data.items[i].price*res.data.items[i].quantity;\r\n            }\r\n            setTotalAmount(totalAmount => totalAmount + amt);\r\n        }\r\n    }\r\n\r\n    const deleteCart = async id => {\r\n        try {\r\n            if(token){\r\n                await axios.delete(`https://ras-api-server.herokuapp.com/api/carts/${id}`, {\r\n                    headers: {token: token}\r\n                });\r\n            }\r\n        } catch (error) {\r\n            window.location.href = \"../customer/home\";\r\n        }\r\n    }\r\n\r\n    const handlePlusClick = async (itemId) => {\r\n        for(let i=0; i<cart.items.length; i++) {\r\n            if(itemId === cart.items[i].itemId) {\r\n                cart.items[i].quantity += 1;\r\n                break;\r\n            }\r\n        }\r\n        const updatedCart = await axios.put(`https://ras-api-server.herokuapp.com/api/carts/${cart._id}`, cart, \r\n            {headers: {token: token}},\r\n            )\r\n        console.log('cart updated');\r\n        setCart(updatedCart.data)\r\n        return window.location.assign('../customer/cart');  \r\n    }\r\n\r\n    const handleMinusClick = async (itemId) => {\r\n        for(let i=0; i<cart.items.length; i++) {\r\n            if(itemId === cart.items[i].itemId) {\r\n                cart.items[i].quantity -= 1;\r\n                if(cart.items[i].quantity === 0) {\r\n                    cart.items.splice(i, 1);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        const updatedCart = await axios.put(`https://ras-api-server.herokuapp.com/api/carts/${cart._id}`, cart, \r\n            {headers: {token: token}},\r\n            )\r\n        if(updatedCart.data.items.length === 0) {\r\n            deleteCart(updatedCart.data._id);\r\n            console.log('Updated Cart Deleted');\r\n        }\r\n        console.log('cart updated');\r\n        setCart(updatedCart.data)\r\n        return window.location.assign('../customer/cart');\r\n    }\r\n\r\n    useEffect(() => { \r\n        getCart();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className='customer-home-container'>\r\n                {\r\n                    cart\r\n                        ?\r\n                            <div>\r\n                            {\r\n                                cart.items \r\n                                ?\r\n                                    <div className='cart-container'>\r\n                                        {\r\n                                            <div>\r\n                                                <h1>Your Cart Contains</h1><br />\r\n                                                <table className='list-of-cart'>\r\n                                                    <tr>\r\n                                                        <th className='order-table-heading'>S. No.</th>\r\n                                                        <th className='order-table-heading'>Item</th>\r\n                                                        <th className='order-table-heading'>Quantity</th>\r\n                                                        <th className='order-table-heading'>Rate</th>\r\n                                                        <th className='order-table-heading'>Amount</th>\r\n                                                    </tr>\r\n                                                    {\r\n                                                    cart.items.map((cartItem, key) => {\r\n                                                        return (\r\n                                                            <tr>\r\n                                                                <td className='order-table-values'>{key+1}</td>\r\n                                                                <td className='order-table-values'><br /><img className='cart-img' src={cartItem.img} /> <br /> {cartItem.title} </td>\r\n                                                                <td className='order-table-values'>\r\n                                                                    {cartItem.quantity} <br /><br />\r\n                                                                    <div className='cart-action-btn-container'>\r\n                                                                        <button className='cart-action-btn' onClick={() => handleMinusClick(cartItem.itemId)}>-</button>\r\n                                                                        <button className='cart-action-btn' onClick={() => handlePlusClick(cartItem.itemId)}>+</button>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td className='order-table-values'>{cartItem.price}</td>\r\n                                                                <td className='order-table-values'>{cartItem.price*cartItem.quantity}</td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                        \r\n                                                    })}\r\n                                                </table>  \r\n                                                <br />\r\n                                            </div>\r\n                                        }\r\n                                        <div className='order-summary'>\r\n                                            <h1>ORDER SUMMARY</h1><hr /><br />\r\n                                            <h3>Subtotal: {totalAmount - 50}</h3>\r\n                                            <h3>Other Taxes: 50</h3><br />\r\n                                            <h3>Order Total: INR {totalAmount}</h3><br /><br />\r\n                                            <a onClick={() => setGenPayment(!genPayment)} className='checkout-btn'>\r\n                                                {\r\n                                                    genPayment ? BACK : PROCEED \r\n                                                }\r\n                                            </a>\r\n                                        </div>\r\n                                    </div>\r\n                                :\r\n                                <h1>No Items Added in The Cart</h1>\r\n                            }\r\n                            </div>\r\n                        :\r\n                            <h1>No Items Added in The Cart</h1>\r\n                }\r\n                {\r\n                    genPayment\r\n                        ?\r\n                            <Payment token={token} userId={userId} username={username} cartId={cart._id} items={cart.items} amount={totalAmount} />\r\n                        :\r\n                            <></>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CustomerCart;","import React, { useState, useEffect } from 'react';\r\nimport Navbar from './Navbar';\r\nimport '../App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst OrderSuccess = () => {\r\n\r\n    const [ orderSummary, setOrderSummary ] = useState({});\r\n\r\n    const orderId = localStorage.getItem('orderId')\r\n\r\n    const getOrderSummary = async () => {\r\n        const res = await axios.get(`https://ras-api-server.herokuapp.com/api/orders/find/${orderId}`);\r\n        setOrderSummary(res.data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderSummary();\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <div className='customer-home-container'>\r\n                {\r\n                    orderId \r\n                        ?\r\n                            <>\r\n                            <h1>THANKS! Order #{orderId}</h1>\r\n                            <h2>Your Order is Being Prepared ...</h2>\r\n                            <br />\r\n                            <h2>ORDER DETAILS</h2><br />\r\n                            <div className='order-success-container'> \r\n                                <div>\r\n                                    <table className='list-of-cart'>\r\n                                        <tr>\r\n                                            <th className='order-table-heading'>S. No</th>\r\n                                            <th className='order-table-heading'>Item Details</th>\r\n                                            <th className='order-table-heading'>Quantity</th>\r\n                                            <th className='order-table-heading'>Rate</th>\r\n                                            <th className='order-table-heading'>Amount</th>\r\n                                        </tr>\r\n                                        {\r\n                                            orderSummary.items\r\n                                                ?\r\n                                                    orderSummary.items.map((orderItem, key) => {\r\n                                                        return (\r\n                                                            <tr>\r\n                                                                <td className='order-table-values'>{key+1}</td>\r\n                                                                <td className='order-table-values'>{orderItem.title}</td>\r\n                                                                <td className='order-table-values'>{orderItem.quantity}</td>\r\n                                                                <td className='order-table-values'>{orderItem.price}</td>\r\n                                                                <td className='order-table-values'>{orderItem.quantity*orderItem.price}</td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })\r\n                                                :\r\n                                                    <></>\r\n                                        }\r\n                                    </table>\r\n                                </div>\r\n                                <div>\r\n                                    <h2>ORDER SUMMARY</h2><hr /><br />\r\n                                    <h3>Subtotal: {orderSummary.amount - 50}</h3>\r\n                                    <h3>Other Taxes: 50</h3><br />\r\n                                    <h3>Order Total: INR {orderSummary.amount}</h3><br /><br />\r\n                                </div>\r\n                            </div>\r\n                            <Link to=\"/customer/orders\"><button onClick={() => localStorage.removeItem('orderId')} className='log-form-btn' style={{width: '20%'}}>PROCEED</button></Link>\r\n                            </>\r\n                        :\r\n                            <h2>Please Place An Order</h2>\r\n                }\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OrderSuccess;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css';\r\nimport AdminNavbar from './AdminNavbar';\r\n\r\nconst GetFeedbacks = () => {\r\n\r\n    const [feedbacks, setFeedbacks] = useState([]);\r\n    const [totalFeedbacks, setTotalFeedbacks] = useState(0);\r\n    const [averageRating, setAverageRating] = useState(0);\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const getFeedbacks = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/feedbacks/all/',\r\n            {headers: {token: token}}, \r\n            );\r\n        setFeedbacks(res.data);\r\n        setTotalFeedbacks(res.data.length);\r\n        // Average Rating Calculation\r\n        var sum = 0;\r\n        for(let i=0; i<res.data.length; i++) {\r\n            sum += res.data[i].rating;\r\n        }\r\n        var avg = sum/res.data.length;\r\n        setAverageRating(parseFloat(avg).toFixed(2));\r\n    }\r\n\r\n    useEffect(() => {\r\n        getFeedbacks();\r\n    }, []);\r\n\r\n    return (\r\n        <div className='reports-page'>\r\n            <AdminNavbar />\r\n            <h1>User Feedbacks</h1><hr /><br />\r\n            \r\n            {\r\n                feedbacks.length !== 0 \r\n                    ?\r\n                        <>\r\n                            <h3>Total Number of Feedbacks Recieved : {totalFeedbacks}</h3><br />\r\n                            <h3>List of Feedbacks</h3><br />\r\n                        \r\n                            <table className='list-of-orders'>\r\n                                <tr>\r\n                                    <th className='order-table-heading'>S. No.</th>\r\n                                    <th className='order-table-heading'>Feedback ID</th>\r\n                                    <th className='order-table-heading'>Given By</th>\r\n                                    <th className='order-table-heading'>Feedback Message</th>\r\n                                    <th className='order-table-heading'>Rating <br /> (Out of 5)</th>\r\n                                </tr>\r\n                                {\r\n                                feedbacks.map((feedback, key) => {\r\n                                    return (\r\n                                        <tr>\r\n                                            <td className='order-table-values'>{key+1}</td>\r\n                                            <td className='order-table-values'>{feedback._id}</td>\r\n                                            <td className='order-table-values'>{feedback.username}</td>\r\n                                            <td className='order-table-values'>{feedback.message}</td>\r\n                                            <td className='order-table-values'>{feedback.rating}</td>\r\n                                        </tr>\r\n                                    )\r\n                                    \r\n                                })}\r\n                            </table>\r\n                            <br />\r\n                            <h3>Avergage Rating: {averageRating}</h3>\r\n                        </>\r\n                    :\r\n                        <h2>No Feedbacks Recieved</h2>\r\n\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GetFeedbacks;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n\r\n    const style = {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        paddingTop: \"50px\"\r\n    }\r\n\r\n    const clearLocalStorage = () => {\r\n        return localStorage.clear();\r\n    }\r\n\r\n    return (\r\n        <div style={style}>\r\n            <img src=\"https://cdn4.iconfinder.com/data/icons/thin-gui-elements-2/24/thin-1550_website_error_missing_404-512.png\" style={{width: \"25%\"}} alt=\"Please Login\" /><br />\r\n            <h1>SORRY! We are unable to find the page you are looking for. ☹️</h1><br />\r\n            <Link to=\"/RAS\"><button onClick={() => clearLocalStorage()} className='log-form-btn' style={{width: \"200px\"}}>Go Back</button></Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page404;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\n\r\nconst StaffLogin = () => {\r\n\r\n    const [user, setUser] = useState({\r\n        username: '',\r\n        password: ''\r\n    });\r\n\r\n    const [err, setErr] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const onChangeInput = e => {\r\n        const { name, value } = e.target;\r\n        setUser({...user, [name]:value});\r\n        setErr('');\r\n    }\r\n\r\n    const adminLoginSubmit = async e =>{\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('https://ras-api-server.herokuapp.com/api/auth/login',{\r\n                username: user.username,\r\n                password: user.password\r\n            });\r\n            if(res.data.isAdmin) {\r\n                setErr(\"Admin Login Has a Separate Page\");\r\n                return;\r\n            }\r\n            if(!res.data.isStaff.state) {\r\n                setErr(\"Only Registered Staff is Allowed to Access\");\r\n                return;\r\n            }\r\n            setUser({username: '', password: ''});\r\n            localStorage.setItem('tokenStore', res.data.accessToken);\r\n            if(res.data.isStaff.staffType === \"chef\") {\r\n                return navigate(`/staff/chef/${res.data._id}`);\r\n            }\r\n            if(res.data.isStaff.staffType === \"waiter\") {\r\n                return navigate(`/staff/waiter/${res.data._id}`);\r\n            }\r\n        } catch (err) {\r\n            console.log(err);\r\n            setErr(err.response.data);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='admin-login-page-container'>\r\n            <h1>Staff Login</h1>\r\n            <h3>Enter The Required Credentials</h3>\r\n\r\n            <br /><br />\r\n\r\n            <form onSubmit={adminLoginSubmit} method=\"post\" className = \"log-form\">\r\n                <div className=\"group log-input\">\r\n                    <input type=\"text\" id = \"username\" name = \"username\" placeholder = \"Staff Username\" required value={user.username} onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                <div className=\"group log-input\">\r\n                    <input type=\"password\" id = \"password\" name = \"password\"  placeholder = \"Staff Password\" required value={user.password} autoComplete=\"true\" onChange={onChangeInput} />\r\n                </div>\r\n\r\n                <br />\r\n\r\n                {\r\n                    err ? <><p className='log-form-err'>{err}</p><br /></> : <br />\r\n                }\r\n                \r\n                <div className=\"container-log-btn\">\r\n                    <button type=\"submit\" name = \"btn_submit\" className=\"log-form-btn\">\r\n                    <span>Staff Login</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StaffLogin;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\n\r\ntoast.configure()\r\n\r\nconst Chef = () => {\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalOrder, setTotalOrder] = useState(0);\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n\r\n    const logoutSubmit = () => {\r\n        localStorage.clear();\r\n    }\r\n\r\n    const notify = (msg) => {\r\n        toast.success(msg, {\r\n            position: 'top-right', autoClose: 6550, hideProgressBar: true, closeOnClick: false, \r\n            pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n        });\r\n    }\r\n\r\n    const markAsPrepared = async (orderId) => {\r\n        const res = await axios.put(`https://ras-api-server.herokuapp.com/api/orders/statusUpdate/${orderId}`, \r\n            { \"status\": \"prepared\" },\r\n            {headers: {token: token}}\r\n        );\r\n        \r\n        notify('Order Marked as Prepared!');\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 2500);\r\n    }\r\n\r\n    const getOrders = async () => {\r\n        const res = await axios.get(`https://ras-api-server.herokuapp.com/api/orders/getOrders`,\r\n            {headers: {token: token}}, \r\n            );\r\n        setOrders(res.data);\r\n        if(res.data !== null) {\r\n            setTotalOrder(res.data.length);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getOrders();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"customer-home-container\">\r\n                <h1>Chef Dashboard</h1><br />\r\n                <Link to=\"/\"><button onClick={logoutSubmit} style={{padding: \"10px 25px\", marginBottom: \"20px\", fontSize: \"1.25rem\", fontWeight: \"bold\", borderRadius: \"25px\", cursor: \"pointer\"}}>CLICK TO LOGOUT</button></Link>\r\n                <br /><br />\r\n                {\r\n                    totalOrder\r\n                        ?\r\n                            <>\r\n                                <table className='order-table'>\r\n                                    <tr>\r\n                                        <th className='order-table-heading'>S. No.</th>\r\n                                        <th className='order-table-heading'>Order Id</th>\r\n                                        <th className='order-table-heading'>Order Details</th>\r\n                                        <th className='order-table-heading'>Ordered By</th>\r\n                                        <th className='order-table-heading'>Date</th>\r\n                                        <th className='order-table-heading'>Amount (INR)</th>\r\n                                        <th className='order-table-heading'>Status</th>\r\n                                        <th className='order-table-heading'>Action</th>\r\n                                    </tr>\r\n                                    {\r\n                                    orders.map((order, key) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td className='order-table-values'>{key+1}</td>\r\n                                                <td className='order-table-values'>{order._id}</td>\r\n                                                <td className='order-table-values'>\r\n                                                    {\r\n                                                        order.items.map(orderItem => {\r\n                                                            return (\r\n                                                                <p>{orderItem.quantity} {orderItem.title}</p>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='order-table-values'>{order.username}</td>\r\n                                                <td className='order-table-values'>{order.createdAt}</td>\r\n                                                <td className='order-table-values'>{order.amount}</td>\r\n                                                {\r\n                                                    order.status === 'pending'\r\n                                                        ?\r\n                                                            <td className='order-table-values'><strong className='pending-btn'>{order.status}</strong></td>\r\n                                                        :\r\n                                                            order.status === 'completed'\r\n                                                                ?\r\n                                                                    <td className='order-table-values'><strong className='completed-btn'>{order.status}</strong></td>\r\n                                                                :\r\n                                                                    <td className='order-table-values'><strong className='prepared-btn'>{order.status}</strong></td>\r\n                                                }\r\n                                                {\r\n                                                    order.status === \"pending\"\r\n                                                        ?\r\n                                                            <td className='order-table-values'><button onClick={() => markAsPrepared(order._id)} className='mark-as-prepared-btn'>MARK AS PREPARED</button></td>\r\n                                                        :\r\n                                                            <td className='order-table-values'><strong>N/A</strong></td>\r\n                                                }\r\n                                            </tr>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                </table>\r\n                            </>\r\n                        :\r\n                            <h2>No Orders Found</h2>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Chef;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport {toast} from 'react-toastify';\r\n\r\ntoast.configure();\r\n\r\nconst Waiter = () => {\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalOrder, setTotalOrder] = useState(0);\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    if(token) {\r\n        isAuth = true;\r\n        var decoded = jwt_decode(token);\r\n        var userId = decoded.id;\r\n    }\r\n\r\n    const logoutSubmit = () => {\r\n        localStorage.clear();\r\n    }\r\n\r\n    const notify = (msg) => {\r\n        toast.success(msg, {\r\n            position: 'top-right', autoClose: 6550, hideProgressBar: true, closeOnClick: false, \r\n            pauseOnHover: true, draggable: false, progress: undefined, theme: 'colored'\r\n        });\r\n    }\r\n\r\n    const markAsCompleted = async (orderId) => {\r\n        const res = await axios.put(`https://ras-api-server.herokuapp.com/api/orders/statusUpdate/${orderId}`, \r\n            { \"status\": \"completed\" },\r\n            {headers: {token: token}}\r\n        );\r\n        notify('Order Marked as Completed!');\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 2500);\r\n    }\r\n\r\n    const generateBill = async (orderId) => {\r\n        localStorage.setItem('orderId', orderId);\r\n        window.location.assign(`../waiter/${userId}/bill/${orderId}`);\r\n    }\r\n\r\n    const getOrders = async () => {\r\n        const res = await axios.get(`https://ras-api-server.herokuapp.com/api/orders/getOrders`,\r\n            {headers: {token: token}}, \r\n            );\r\n        setOrders(res.data);\r\n        if(res.data !== null) {\r\n            setTotalOrder(res.data.length);\r\n        }\r\n    }\r\n    \r\n    useEffect(() => {\r\n        getOrders();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"customer-home-container\">\r\n                <h1>Waiter Dashboard</h1><br />\r\n                <Link to=\"/\"><button onClick={logoutSubmit} style={{padding: \"10px 25px\", marginBottom: \"20px\", fontSize: \"1.25rem\", fontWeight: \"bold\", borderRadius: \"25px\", cursor: \"pointer\"}}>CLICK TO LOGOUT</button></Link>\r\n                <br /><br />\r\n                {\r\n                    totalOrder\r\n                        ?\r\n                            <>\r\n                                <table className='order-table'>\r\n                                    <tr>\r\n                                        <th className='order-table-heading'>S. No.</th>\r\n                                        <th className='order-table-heading'>Order Id</th>\r\n                                        <th className='order-table-heading'>Order Details</th>\r\n                                        <th className='order-table-heading'>Ordered By</th>\r\n                                        <th className='order-table-heading'>Date</th>\r\n                                        <th className='order-table-heading'>Amount (INR)</th>\r\n                                        <th className='order-table-heading'>Status</th>\r\n                                        <th className='order-table-heading'>Action</th>\r\n                                        <th className='order-table-heading'>Bill</th>\r\n                                    </tr>\r\n                                    {\r\n                                    orders.map((order, key) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td className='order-table-values'>{key+1}</td>\r\n                                                <td className='order-table-values'>{order._id}</td>\r\n                                                <td className='order-table-values'>\r\n                                                    {\r\n                                                        order.items.map(orderItem => {\r\n                                                            return (\r\n                                                                <p>{orderItem.quantity} {orderItem.title}</p>\r\n                                                            )\r\n                                                        })\r\n                                                    }\r\n                                                </td>\r\n                                                <td className='order-table-values'>{order.username}</td>\r\n                                                <td className='order-table-values'>{order.createdAt}</td>\r\n                                                <td className='order-table-values'>{order.amount}</td>\r\n                                                {\r\n                                                    order.status === 'pending'\r\n                                                        ?\r\n                                                            <td className='order-table-values'><strong className='pending-btn'>{order.status}</strong></td>\r\n                                                        :\r\n                                                            order.status === 'completed'\r\n                                                                ?\r\n                                                                    <td className='order-table-values'><strong className='completed-btn'>{order.status}</strong></td>\r\n                                                                :\r\n                                                                    <td className='order-table-values'><strong className='prepared-btn'>{order.status}</strong></td>\r\n                                                }\r\n                                                {\r\n                                                    order.status === \"prepared\"\r\n                                                        ?\r\n                                                            <td className='order-table-values'><button onClick={() => markAsCompleted(order._id)} className='mark-as-completed-btn'>MARK AS COMPLETED</button></td>\r\n                                                        :\r\n                                                            <td className='order-table-values'><strong>N/A</strong></td>\r\n                                                }\r\n                                                {\r\n                                                    order.status === \"completed\"\r\n                                                        ?\r\n                                                            <td className='order-table-values'><button onClick={() => generateBill(order._id)} className='download-bill-btn'>PRINT BILL</button></td>\r\n                                                        :\r\n                                                            <td className='order-table-values'><strong>N/A</strong></td>\r\n                                                }\r\n                                            </tr>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                </table>\r\n                            </>\r\n                        :\r\n                            <h2>No Orders Found</h2>\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Waiter;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport LOGO from '../logo.png';\r\n\r\nconst PrintBill = () => {\r\n\r\n    const billId = localStorage.getItem('orderId');\r\n    const [order, setOrder] = useState({});\r\n\r\n    const getOrderDetails = async (billId) => {\r\n        const res = await axios.get(`https://ras-api-server.herokuapp.com/api/orders/find/${billId}`)\r\n        if(res.data) {\r\n            setOrder(res.data);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrderDetails(billId);\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"bill-container\">\r\n                <div className=\"bill-top\">\r\n                    <div className=\"bill-top-left\">\r\n                        <img src={LOGO} />\r\n                    </div>\r\n                    <div className=\"bill-top-right\">\r\n                        <h1>RAS</h1>\r\n                        <h2>137, VIP Rd, Poddar Vihar</h2>\r\n                        <h3>Kolkata, West Bengal - 700052</h3>\r\n                        <h3>+91 9876543210</h3>\r\n                        <h3>admin@ras.com</h3>\r\n                    </div>\r\n                </div>\r\n                <hr /><br />\r\n                <div className=\"bill-title\">\r\n                    <h3>INVOICE</h3>\r\n                </div>\r\n                <br /><hr /><br />\r\n                <div className=\"bill-info\">\r\n                    <h3>CUSTOMER NAME: {order.username}</h3>\r\n                    <h3>Bill No. : {order._id}</h3>       \r\n                </div>\r\n                <br />\r\n                <div className=\"bill-date-time\">\r\n                    <h3>{order.createdAt}</h3><br />\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <table className='list-of-bill'>\r\n                        <tr>\r\n                            <th className='xyz'>S. No</th>\r\n                            <th className='xyz'>Particulars</th>\r\n                            <th className='xyz'>Quantity</th>\r\n                            <th className='xyz'>Rate</th>\r\n                            <th className='xyz'>Amount</th>\r\n                        </tr>\r\n                        {\r\n                            order.items\r\n                                ?\r\n                                    order.items.map((orderItem, key) => {\r\n                                        return (\r\n                                            <tr>\r\n                                                <td className='saza'>{key+1}</td>\r\n                                                <td className='saza'>{orderItem.title}</td>\r\n                                                <td className='saza'>{orderItem.quantity}</td>\r\n                                                <td className='saza'>{orderItem.price}.00</td>\r\n                                                <td className='saza'>{orderItem.quantity*orderItem.price}.00</td>\r\n                                            </tr>\r\n                                        )\r\n                                    })\r\n                                :\r\n                                    <></>\r\n                        }\r\n                    </table>\r\n                </div>\r\n                <br />\r\n                <div>\r\n                    <table className=\"bill-amount-table\">\r\n                        <tr>\r\n                            <td><strong>Subtotal</strong></td>\r\n                            <td>{order.amount- 50}.00</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Taxes</strong></td>\r\n                            <td>50.00</td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td><strong>Total (Rs.)</strong></td>\r\n                            <td>{order.amount}.00</td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div>\r\n                    <br />\r\n                    <h3>GST NO 27AADFH5037N319</h3>\r\n                    <h4>E. & O.E.</h4>\r\n                </div>\r\n                <br /><hr /><br />\r\n                <div className=\"bill-footer\">\r\n                    <h3>Thank you for your visit.</h3>\r\n                    <h3>Have a nice day!</h3>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PrintBill;","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AdminNavbar from './AdminNavbar';\r\n\r\nconst AdminInvoices = () => {\r\n\r\n    const [orders, setOrders] = useState([]);\r\n    const [totalOrder, setTotalOrder] = useState(0);\r\n\r\n    var isAuth = false;\r\n    var token = localStorage.getItem('tokenStore');\r\n    if(token)\r\n        isAuth = true;\r\n\r\n    const getOrders = async () => {\r\n        const res = await axios.get('https://ras-api-server.herokuapp.com/api/orders/',\r\n            {headers: {token: token}}, \r\n            );\r\n        setOrders(res.data);\r\n        setTotalOrder(res.data.length);\r\n    }\r\n\r\n    const generateInvoice = async (orderId) => {\r\n        localStorage.setItem('orderId', orderId);\r\n        window.location.assign(`../admin/invoices/${orderId}`);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getOrders();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className='reports-page'>\r\n                <AdminNavbar />\r\n                <h1>Invoices</h1><hr /><br />\r\n                {\r\n                    totalOrder>0\r\n                        ?\r\n                            <>\r\n                                <table className='list-of-orders'>\r\n                                    <tr>\r\n                                        <th className='order-table-heading'>S. No.</th>\r\n                                        <th className='order-table-heading'>Order Id</th>\r\n                                        <th className='order-table-heading'>Ordered By</th>\r\n                                        <th className='order-table-heading'>Amount</th>\r\n                                        <th className='order-table-heading'>Status</th>\r\n                                        <th className='order-table-heading'>Invoice</th>\r\n                                    </tr>\r\n                                    {\r\n                                    orders.map((order, key) => {\r\n                                        return (\r\n                                            order.status === \"completed\"\r\n                                                ?\r\n                                                        <tr>\r\n                                                        <td className='order-table-values'>{key+1}</td>\r\n                                                        <td className='order-table-values'>{order._id}</td>\r\n                                                        <td className='order-table-values'>{order.username}</td>\r\n                                                        <td className='order-table-values'>{order.amount}</td>\r\n                                                        <td className='order-table-values'><strong style={{color: \"#04AA6D\"}}>{order.status}</strong></td>\r\n                                                        <td className='order-table-values'><button onClick={() => generateInvoice(order._id)} style={{margin: \"10px 0\",padding: \"10px 12px\", color: \"blue\"}} className='download-bill-btn'>GENERATE INVOICE</button></td>\r\n                                                    </tr>\r\n                                                :\r\n                                                    <></>\r\n                                        )\r\n                                        \r\n                                    })}\r\n                                </table>\r\n                            </>\r\n                        :\r\n                            <h2>No Invoices Found</h2>\r\n                }\r\n                </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default AdminInvoices;","import React from 'react';\r\nimport PrintBill from './PrintBill';\r\n\r\nconst AdminGenBill = () => {\r\n    return (\r\n        <>\r\n            <PrintBill />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminGenBill;","import './App.css';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {Route, Routes} from 'react-router-dom';\r\nimport Main from './components/Main';\r\nimport CustomerPage from './components/CustomerPage';\r\nimport AdminPage from './components/AdminPage';\r\nimport CustomerHome from './components/CustomerHome';\r\nimport AdminHome from './components/AdminHome';\r\nimport GetUsers from './components/GetUsers';\r\nimport GenerateReport from './components/GenerateReport';\r\nimport ViewOrders from './components/ViewOrders';\r\nimport ManageItems from './components/ManageItems';\r\nimport AddMenuItems from './components/AddMenuItems';\r\nimport EditItem from './components/EditMenuItem';\r\nimport CustomerLogin from './components/CustomerLogin';\r\nimport CustomerRegister from './components/CustomerRegister';\r\nimport CustomerOrders from './components/CustomerOrders';\r\nimport CustomerCart from './components/CustomerCart';\r\nimport Payment from './components/Payment';\r\nimport OrderSuccess from './components/OrderSuccess';\r\nimport GetFeedbacks from './components/GetFeedbacks';\r\nimport Page404 from './components/Page404';\r\nimport StaffLogin from './components/StaffLogin';\r\nimport Chef from './components/Chef';\r\nimport Waiter from './components/Waiter';\r\nimport PrintBill from './components/PrintBill';\r\nimport AdminInvoices from './components/AdminInvoices';\r\nimport AdminGenBill from './components/AdminGenBill';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Routes>\r\n                <Route path=\"/\" element={<Main />} />\r\n                <Route path=\"/customer/login\" element={<CustomerLogin />} />\r\n                <Route path=\"/customer/register\" element={<CustomerRegister />} />\r\n                <Route path=\"/customer/home\" element={<CustomerHome />} />\r\n                <Route path=\"/customer/orders\" element={<CustomerOrders />} />\r\n                <Route path=\"/customer/cart\" element={<CustomerCart />} />\r\n                <Route path=\"/customer/orderSuccess\" element={<OrderSuccess />} />\r\n                <Route path=\"/admin\" element={<AdminPage />} />\r\n                <Route path=\"/admin/home\" element={<AdminHome />} />\r\n                <Route path=\"/admin/users\" element={<GetUsers />} />\r\n                <Route path=\"/admin/report\" element={<GenerateReport />} />\r\n                <Route path=\"/admin/orders\" element={<ViewOrders />} />\r\n                <Route path=\"/admin/feedbacks\" element={<GetFeedbacks />} />\r\n                <Route path='/admin/invoices' element={<AdminInvoices />} />\r\n                <Route path='/admin/invoices/:id' element={<AdminGenBill />} />\r\n                <Route path=\"/admin/items\" element={<ManageItems />} />\r\n                <Route path=\"/admin/items/add\" element={<AddMenuItems />} />\r\n                <Route path=\"/admin/items/edit/:id\" element={<EditItem />} />\r\n                <Route path=\"/staff/login\" element={<StaffLogin />} />\r\n                <Route path=\"/staff/chef/:id\" element={<Chef />} />\r\n                <Route path=\"/staff/waiter/:id\" element={<Waiter />} />\r\n                <Route path=\"/staff/waiter/:id/bill/:billId\" element={<PrintBill />} />\r\n                <Route path=\"*\" element={<Page404 />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}